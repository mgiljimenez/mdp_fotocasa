help("kmeans")
library(ggsci)
colores = pal_npg("nrc")(7)
colores2 = pal_npg("nrc")(6)
colores3=pal_npg("nrc")(8)
par(mfrow = c(1,3))
plot(silhouette(gruposWARD, midist_manhattan), col=colores, border=NA, main = "WARD")
plot(silhouette(clustPAM$clustering, midist_manhattan), col=colores2, border=NA, main = "K-MEDIOIDES")
plot(silhouette(clustMEANS$cluster, midist_eu), col=colores3, border=NA, main = "K-MEDIAS")
clustWARD <- hclust(midist_manhattan, method="ward.D2")
gruposWARD <- cutree(clustWARD, k=7)
table(gruposWARD)
clustPAM <- pam(fotocasaConfort, k = 6, metric="manhattan")
table(clustPAM$clustering)
clustMEANS <- kmeans(fotocasaConfort, centers = 8, nstart=30)
table(clustMEANS$cluster)
help("kmeans")
library(ggsci)
colores = pal_npg("nrc")(7)
colores2 = pal_npg("nrc")(6)
colores3=pal_npg("nrc")(8)
par(mfrow = c(1,3))
plot(silhouette(gruposWARD, midist_manhattan), col=colores, border=NA, main = "WARD")
plot(silhouette(clustPAM$clustering, midist_manhattan), col=colores2, border=NA, main = "K-MEDIOIDES")
plot(silhouette(clustMEANS$cluster, midist_eu), col=colores3, border=NA, main = "K-MEDIAS")
clustWARD <- hclust(midist_manhattan, method="ward.D2")
gruposWARD <- cutree(clustWARD, k=7)
table(gruposWARD)
clustPAM <- pam(fotocasaConfort, k = 6, metric="manhattan")
table(clustPAM$clustering)
clustMEANS <- kmeans(fotocasaConfort, centers = 8, nstart=20)
table(clustMEANS$cluster)
help("kmeans")
library(ggsci)
colores = pal_npg("nrc")(7)
colores2 = pal_npg("nrc")(6)
colores3=pal_npg("nrc")(8)
par(mfrow = c(1,3))
plot(silhouette(gruposWARD, midist_manhattan), col=colores, border=NA, main = "WARD")
plot(silhouette(clustPAM$clustering, midist_manhattan), col=colores2, border=NA, main = "K-MEDIOIDES")
plot(silhouette(clustMEANS$cluster, midist_eu), col=colores3, border=NA, main = "K-MEDIAS")
p1 = fviz_nbclust(x = fotocasaConfort, FUNcluster = pam, method = "silhouette",
k.max = 10, verbose = FALSE, diss=midist_manhattan) +
labs(title = "Numero optimo de clusters")
p2 = fviz_nbclust(x = fotocasaConfort, FUNcluster = pam, method = "wss",
k.max = 10, verbose = FALSE, diss=midist_manhattan) +
labs(title = "Numero optimo de clusters")
grid.arrange(p1, p2, nrow = 1)
clustWARD <- hclust(midist_manhattan, method="ward.D2")
gruposWARD <- cutree(clustWARD, k=7)
table(gruposWARD)
clustPAM <- pam(fotocasaConfort, k = 6, metric="manhattan")
table(clustPAM$clustering)
clustMEANS <- kmeans(fotocasaConfort, centers = 8, nstart=20)
table(clustMEANS$cluster)
help("kmeans")
library(ggsci)
colores = pal_npg("nrc")(7)
colores2 = pal_npg("nrc")(6)
colores3=pal_npg("nrc")(8)
par(mfrow = c(1,3))
plot(silhouette(gruposWARD, midist_manhattan), col=colores, border=NA, main = "WARD")
plot(silhouette(clustPAM$clustering, midist_manhattan), col=colores2, border=NA, main = "K-MEDIOIDES")
plot(silhouette(clustMEANS$cluster, midist_eu), col=colores3, border=NA, main = "K-MEDIAS")
library(grid)
library(gridExtra)
p1 = fviz_nbclust(x = fotocasaConfort, FUNcluster = hcut, method = "silhouette",
hc_method = "ward.D2", k.max = 10, verbose = FALSE,
hc_metric = "canberra") + labs(title = "Num. optimo clusters")
p2 = fviz_nbclust(x = fotocasaConfort, FUNcluster = hcut, method = "wss",
hc_method = "ward.D2", k.max = 10, verbose = FALSE,
hc_metric = "canberra") + labs(title = "Num. optimo clusters")
grid.arrange(p1, p2, nrow = 1)
library(grid)
library(gridExtra)
p1 = fviz_nbclust(x = fotocasaConfort, FUNcluster = hcut, method = "silhouette",
hc_method = "ward.D2", k.max = 10, verbose = FALSE,
hc_metric = "manhattan") + labs(title = "Num. optimo clusters")
p2 = fviz_nbclust(x = fotocasaConfort, FUNcluster = hcut, method = "wss",
hc_method = "ward.D2", k.max = 10, verbose = FALSE,
hc_metric = "manhattan") + labs(title = "Num. optimo clusters")
grid.arrange(p1, p2, nrow = 1)
clustWARD <- hclust(midist_manhattan, method="ward.D2")
gruposWARD <- cutree(clustWARD, k=7)
table(gruposWARD)
clustPAM <- pam(fotocasaConfort, k = 4, metric="manhattan")
table(clustPAM$clustering)
clustMEANS <- kmeans(fotocasaConfort, centers = 8, nstart=20)
table(clustMEANS$cluster)
help("kmeans")
library(ggsci)
colores = pal_npg("nrc")(7)
colores2 = pal_npg("nrc")(4)
colores3=pal_npg("nrc")(8)
par(mfrow = c(1,3))
plot(silhouette(gruposWARD, midist_manhattan), col=colores, border=NA, main = "WARD")
plot(silhouette(clustPAM$clustering, midist_manhattan), col=colores2, border=NA, main = "K-MEDIOIDES")
plot(silhouette(clustMEANS$cluster, midist_eu), col=colores3, border=NA, main = "K-MEDIAS")
misclust = factor(clustPAM$clustering)
miPCA = PCA(fotocasaConfort, scale.unit = FALSE, graph = FALSE)
eig.val = get_eigenvalue(miPCA)
Vmedia = 100 * (1/nrow(eig.val))
fviz_eig(miPCA, addlabels = TRUE) +
geom_hline(yintercept=Vmedia, linetype=2, color="red")
K=4
# Gr치fico T2 Hotelling
misScores = res.pca$ind$coord[,1:K]
K=4
# Gr치fico T2 Hotelling
misScores = miPCA$ind$coord[,1:K]
miT2 = colSums(t(misScores**2)/eig.val[1:K,1])
I = nrow(fotocasaConfort)
F95 = K*(I**2 - 1)/(I*(I - K)) * qf(0.95, K, I-K)
F99 = K*(I**2 - 1)/(I*(I - K)) * qf(0.99, K, I-K)
plot(1:length(miT2), miT2, type = "p", xlab = "Pisos", ylab = "T2")
abline(h = F95, col = "orange", lty = 2, lwd = 2)
abline(h = F99, col = "red3", lty = 2, lwd = 2)
K=4
# Gr치fico T2 Hotelling
misScores = miPCA$ind$coord[,1:K]
miT2 = colSums(t(misScores**2)/eig.val[1:K,1])
I = nrow(fotocasaConfort)
F95 = K*(I**2 - 1)/(I*(I - K)) * qf(0.95, K, I-K)
F99 = K*(I**2 - 1)/(I*(I - K)) * qf(0.99, K, I-K)
plot(1:length(miT2), miT2, type = "p", xlab = "Pisos", ylab = "T2")
abline(h = F95, col = "orange", lty = 2, lwd = 2)
abline(h = F99, col = "red3", lty = 2, lwd = 2)
anomalas = which(miT2 > F95)
anomalas
misclust = factor(clustPAM$clustering)
miPCA = PCA(fotocasaConfort, scale.unit = FALSE, graph = FALSE, ncp=4)
eig.val = get_eigenvalue(miPCA)
Vmedia = 100 * (1/nrow(eig.val))
fviz_eig(miPCA, addlabels = TRUE) +
geom_hline(yintercept=Vmedia, linetype=2, color="red")
p1 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, palette = colores)
p2 = fviz_pca_var(miPCA)
grid.arrange(p1, p2, nrow = 1)
p1 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, palette = colores)
p2 = fviz_pca_var(miPCA)
grid.arrange(p1, p2, nrow = 1)
p1 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, axes = 3:4, palette = colores)
p2 = fviz_pca_var(miPCA, axes = 3:4)
grid.arrange(p1, p2, nrow = 1)
p1 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, palette = colores)
p2 = fviz_pca_var(miPCA)
grid.arrange(p1, p2, nrow = 1)
p3 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, axes = 3:4, palette = colores)
p4 = fviz_pca_var(miPCA, axes = 3:4)
grid.arrange(p3, p4, nrow = 1)
misclust = factor(clustPAM$clustering)
miPCA = PCA(fotocasaConfort, scale.unit = FALSE, graph = FALSE, ncp=3)
eig.val = get_eigenvalue(miPCA)
Vmedia = 100 * (1/nrow(eig.val))
fviz_eig(miPCA, addlabels = TRUE) +
geom_hline(yintercept=Vmedia, linetype=2, color="red")
p1 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, palette = colores)
p2 = fviz_pca_var(miPCA)
grid.arrange(p1, p2, nrow = 1)
p3 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, axes = 1:3, palette = colores)
p1 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, palette = colores)
p2 = fviz_pca_var(miPCA)
grid.arrange(p1, p2, nrow = 1)
p3 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, axes = 2:3, palette = colores)
p4 = fviz_pca_var(miPCA, axes = 1:3)
p1 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, palette = colores)
p2 = fviz_pca_var(miPCA)
grid.arrange(p1, p2, nrow = 1)
p3 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, axes = 2:3, palette = colores)
p4 = fviz_pca_var(miPCA, axes = 2:3)
grid.arrange(p3, p4, nrow = 1)
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:6)
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:4)
kable(t(round(mediasCluster,2)))
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:4)
matplot(t(mediasCluster), type = "l", col = colores, ylab = "", xlab = "", lwd = 2,
lty = 1, main = "Perfil medio de los clusters", xaxt = "n")
axis(side = 1, at = 1:ncol(cereals2), labels = colnames(cereals2), las = 2)
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:4)
matplot(t(mediasCluster), type = "l", col = colores, ylab = "", xlab = "", lwd = 2,
lty = 1, main = "Perfil medio de los clusters", xaxt = "n")
axis(side = 1, at = 1:ncol(fotocasaConfort), labels = colnames(fotocasaConfort), las = 2)
legend("topleft", as.character(1:4), col = colores, lwd = 2, ncol = 3, bty = "n")
head(fotocasaConfort)
fotocasaConfort = fotocasa[,tabla$Confort == 1]
head(fotocasaConfort)
# Vector con nombres de todas las columnas
columnas= colnames(fotocasa)
# Definir las variables de confort
confort = c(
"bathrooms", "floor", "rooms", "surface"
)
# Identificar autom치ticamente las variables de servicios (aquellas que terminan en "_count")
servicios = grep("_count$", columnas, value = TRUE)
# Crear el data.frame de flags
tabla <- data.frame(
Variable   = columnas,
Confort    = as.integer(columnas %in% confort),
Servicios  = as.integer(columnas %in% servicios),
stringsAsFactors = FALSE
)
# Mostrar resultado
print(tabla)
fotocasaConfort = fotocasa[,tabla$Confort == 1]
head(fotocasaConfort)
fotocasaConfort = scale(fotocasaConfort, center = TRUE, scale = TRUE)
#distancia EUCLIDEA
midist_eu <- get_dist(fotocasaConfort, stand = FALSE, method = "euclidean")
fviz_dist(midist_eu, show_labels = TRUE, lab_size = 0.3,
gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
#distancia MANHATTAN
midist_manhattan <- get_dist(fotocasaConfort, stand = FALSE, method = "manhattan")
fviz_dist(midist_manhattan, show_labels = TRUE, lab_size = 0.3,
gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
library(grid)
library(gridExtra)
p1 = fviz_nbclust(x = fotocasaConfort, FUNcluster = hcut, method = "silhouette",
hc_method = "ward.D2", k.max = 10, verbose = FALSE,
hc_metric = "manhattan") + labs(title = "Num. optimo clusters")
p2 = fviz_nbclust(x = fotocasaConfort, FUNcluster = hcut, method = "wss",
hc_method = "ward.D2", k.max = 10, verbose = FALSE,
hc_metric = "manhattan") + labs(title = "Num. optimo clusters")
grid.arrange(p1, p2, nrow = 1)
p1 = fviz_nbclust(x = fotocasaConfort, FUNcluster = pam, method = "silhouette",
k.max = 10, verbose = FALSE, diss=midist_manhattan) +
labs(title = "Numero optimo de clusters")
p2 = fviz_nbclust(x = fotocasaConfort, FUNcluster = pam, method = "wss",
k.max = 10, verbose = FALSE, diss=midist_manhattan) +
labs(title = "Numero optimo de clusters")
grid.arrange(p1, p2, nrow = 1)
p1 = fviz_nbclust(x = fotocasaConfort, FUNcluster = kmeans, method = "silhouette",
k.max = 10, verbose = FALSE) +
labs(title = "K-means")
p2 = fviz_nbclust(x = fotocasaConfort, FUNcluster = kmeans, method = "wss",
k.max = 10, verbose = FALSE) +
labs(title = "K-means")
grid.arrange(p1, p2, nrow = 1)
clustWARD <- hclust(midist_manhattan, method="ward.D2")
gruposWARD <- cutree(clustWARD, k=7)
table(gruposWARD)
clustPAM <- pam(fotocasaConfort, k = 4, metric="manhattan")
table(clustPAM$clustering)
clustMEANS <- kmeans(fotocasaConfort, centers = 8, nstart=20)
table(clustMEANS$cluster)
help("kmeans")
library(ggsci)
colores = pal_npg("nrc")(7)
colores2 = pal_npg("nrc")(4)
colores3=pal_npg("nrc")(8)
par(mfrow = c(1,3))
plot(silhouette(gruposWARD, midist_manhattan), col=colores, border=NA, main = "WARD")
plot(silhouette(clustPAM$clustering, midist_manhattan), col=colores2, border=NA, main = "K-MEDIOIDES")
plot(silhouette(clustMEANS$cluster, midist_eu), col=colores3, border=NA, main = "K-MEDIAS")
p1 = fviz_nbclust(x = fotocasaConfort, FUNcluster = kmeans, method = "silhouette",
k.max = 10, verbose = FALSE) +
labs(title = "K-means")
p2 = fviz_nbclust(x = fotocasaConfort, FUNcluster = kmeans, method = "wss",
k.max = 10, verbose = FALSE) +
labs(title = "K-means")
grid.arrange(p1, p2, nrow = 1)
clustWARD <- hclust(midist_manhattan, method="ward.D2")
gruposWARD <- cutree(clustWARD, k=8)
table(gruposWARD)
clustPAM <- pam(fotocasaConfort, k = 7, metric="manhattan")
table(clustPAM$clustering)
clustMEANS <- kmeans(fotocasaConfort, centers = 6, nstart=20)
table(clustMEANS$cluster)
help("kmeans")
library(ggsci)
colores = pal_npg("nrc")(8)
colores2 = pal_npg("nrc")(7)
colores3=pal_npg("nrc")(6)
par(mfrow = c(1,3))
plot(silhouette(gruposWARD, midist_manhattan), col=colores, border=NA, main = "WARD")
plot(silhouette(clustPAM$clustering, midist_manhattan), col=colores2, border=NA, main = "K-MEDIOIDES")
plot(silhouette(clustMEANS$cluster, midist_eu), col=colores3, border=NA, main = "K-MEDIAS")
misclust = factor(clustMEANS$cluster)
miPCA = PCA(fotocasaConfort, scale.unit = FALSE, graph = FALSE, ncp=3)
eig.val = get_eigenvalue(miPCA)
Vmedia = 100 * (1/nrow(eig.val))
fviz_eig(miPCA, addlabels = TRUE) +
geom_hline(yintercept=Vmedia, linetype=2, color="red")
misclust = factor(clustMEANS$cluster)
miPCA = PCA(fotocasaConfort, scale.unit = FALSE, graph = FALSE, ncp=2)
eig.val = get_eigenvalue(miPCA)
Vmedia = 100 * (1/nrow(eig.val))
fviz_eig(miPCA, addlabels = TRUE) +
geom_hline(yintercept=Vmedia, linetype=2, color="red")
p1 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, palette = colores)
p2 = fviz_pca_var(miPCA)
grid.arrange(p1, p2, nrow = 1)
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:4)
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:2)
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:2)
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:2)
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:2)
mediasCluster
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:6)
matplot(t(mediasCluster), type = "l", col = colores, ylab = "", xlab = "", lwd = 2,
lty = 1, main = "Perfil medio de los clusters", xaxt = "n")
axis(side = 1, at = 1:ncol(fotocasaConfort), labels = colnames(fotocasaConfort), las = 2)
legend("topleft", as.character(1:6), col = colores, lwd = 2, ncol = 3, bty = "n")
mediasCluster
# Vector con nombres de todas las columnas
columnas= colnames(fotocasa)
# Definir las variables de confort
confort = c("tieneAscensor", "tieneTrastero", "tieneCalefacci칩n", "tieneAireAcondicionado", "bathrooms", "surface", "rooms"
)
# Identificar autom치ticamente las variables de servicios (aquellas que terminan en "_count")
servicios = grep("_count$", columnas, value = TRUE)
# Crear el data.frame de flags
tabla <- data.frame(
Variable   = columnas,
Confort    = as.integer(columnas %in% confort),
Servicios  = as.integer(columnas %in% servicios),
stringsAsFactors = FALSE
)
# Mostrar resultado
print(tabla)
fotocasaConfort = fotocasa[,tabla$Confort == 1]
head(fotocasaConfort)
fotocasaConfort = scale(fotocasaConfort, center = TRUE, scale = TRUE)
help(get_dist)
help(get_dist)
#distancia MAXIMA
midist_gower <- gower_dist <- daisy(fotocasaConfort, metric = "gower")
fviz_dist(midist_gower, show_labels = TRUE, lab_size = 0.3,
gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
help("fviz_nbclust")
library(grid)
library(gridExtra)
help("fviz_nbclust")
p1 = fviz_nbclust(x = fotocasaConfort, FUNcluster = hcut, diss=midist_gower,
hc_method = "ward.D2", k.max = 10, verbose = FALSE,
hc_metric = "manhattan") + labs(title = "Num. optimo clusters")
p2 = fviz_nbclust(x = fotocasaConfort, FUNcluster = hcut, method = "wss",
hc_method = "ward.D2", k.max = 10, verbose = FALSE,diss=midist_gower,
hc_metric = "manhattan") + labs(title = "Num. optimo clusters")
grid.arrange(p1, p2, nrow = 1)
p1 = fviz_nbclust(x = fotocasaConfort, FUNcluster = pam, method = "silhouette",
k.max = 10, verbose = FALSE, diss=midist_gower) +
labs(title = "Numero optimo de clusters")
p2 = fviz_nbclust(x = fotocasaConfort, FUNcluster = pam, method = "wss",
k.max = 10, verbose = FALSE, diss=midist_gower) +
labs(title = "Numero optimo de clusters")
grid.arrange(p1, p2, nrow = 1)
help("pam")
clustWARD <- hclust(midist_gower, method="ward.D2")
gruposWARD <- cutree(clustWARD, k=5)
table(gruposWARD)
clustPAM <- pam(fotocasaConfort, k =6, diss=midist_gower)
clustWARD <- hclust(midist_gower, method="ward.D2")
gruposWARD <- cutree(clustWARD, k=5)
table(gruposWARD)
clustPAM <- pam(midist_gower, k =6, diss=TRUE)
table(clustPAM$clustering)
library(ggsci)
colores = pal_npg("nrc")(5)
colores2 = pal_npg("nrc")(6)
par(mfrow = c(1,2))
plot(silhouette(gruposWARD, midist_manhattan), col=colores, border=NA, main = "WARD")
plot(silhouette(clustPAM$clustering, midist_manhattan), col=colores2, border=NA, main = "K-MEDIOIDES")
library(ggsci)
colores = pal_npg("nrc")(5)
colores2 = pal_npg("nrc")(6)
par(mfrow = c(1,2))
plot(silhouette(gruposWARD, midist_gower), col=colores, border=NA, main = "WARD")
plot(silhouette(clustPAM$clustering, midist_gower), col=colores2, border=NA, main = "K-MEDIOIDES")
misclust = factor(gruposWARD$cluster)
misclust = factor(clustWARD$cluster)
miPCA = PCA(fotocasaConfort, scale.unit = FALSE, graph = FALSE)
eig.val = get_eigenvalue(miPCA)
Vmedia = 100 * (1/nrow(eig.val))
fviz_eig(miPCA, addlabels = TRUE) +
geom_hline(yintercept=Vmedia, linetype=2, color="red")
misclust = factor(clustWARD$cluster)
miPCA = PCA(fotocasaConfort, scale.unit = FALSE, graph = FALSE, ncp=2)
eig.val = get_eigenvalue(miPCA)
Vmedia = 100 * (1/nrow(eig.val))
fviz_eig(miPCA, addlabels = TRUE) +
geom_hline(yintercept=Vmedia, linetype=2, color="red")
grid.arrange(p1, p2, nrow = 1)
p1 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, palette = colores)
misclust = factor(clustWARD$cluster)
miPCA = PCA(fotocasaConfort, scale.unit = FALSE, graph = FALSE, ncp=2)
eig.val = get_eigenvalue(miPCA)
Vmedia = 100 * (1/nrow(eig.val))
fviz_eig(miPCA, addlabels = TRUE) +
geom_hline(yintercept=Vmedia, linetype=2, color="red")
p1 = fviz_pca_ind(miPCA, geom = "point", habillage = misclust,
addEllipses = TRUE, palette = colores)
length(misclust)
clustWARD
gruposWARD=factor(gruposWARD)
gruposWARD=factor(gruposWARD)
miPCA = PCA(fotocasaConfort, scale.unit = FALSE, graph = FALSE, ncp=2)
eig.val = get_eigenvalue(miPCA)
Vmedia = 100 * (1/nrow(eig.val))
fviz_eig(miPCA, addlabels = TRUE) +
geom_hline(yintercept=Vmedia, linetype=2, color="red")
fviz_pca_ind(miPCA, geom = "point",
habillage = gruposWARD, # asignaci칩n de color
addEllipses = TRUE,
palette = "jco")
p1 <- fviz_pca_ind(miPCA,
geom = "point",
habillage = gruposWARD,
addEllipses = TRUE,
palette = "jco",
title = "Score plot: individuos")
# Loading plot (variables activas)
p2 <- fviz_pca_var(miPCA,
col.var = "contrib", # Color seg칰n contribuci칩n a los ejes
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
title = "Loading plot: variables")
# Mostrar ambos juntos
grid.arrange(p1, p2, nrow = 1)
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = misclust), mean)[,-1]
mediasCluster = aggregate(fotocasaConfort, by = list("gruposWARD" = misclust), mean)[,-1]
nrow(fotocasaConfort)
length(misclust)
nrow(fotocasaConfort)
length(gruposWARD)
mediasCluster = aggregate(fotocasaConfort, by = list("cluster" = gruposWARD), mean)[,-1]
rownames(mediasCluster) = paste0("c",1:5)
matplot(t(mediasCluster), type = "l", col = colores, ylab = "", xlab = "", lwd = 2,
lty = 1, main = "Perfil medio de los clusters", xaxt = "n")
axis(side = 1, at = 1:ncol(fotocasaConfort), labels = colnames(fotocasaConfort), las = 2)
legend("topleft", as.character(1:5), col = colores, lwd = 2, ncol = 3, bty = "n")
mediasCluster
fotocasaServicios = fotocasa[,tabla$Servicios == 1]
head(fotocasaServicios)
fotocasaServicios = scale(fotocasaServicios, center = TRUE, scale = TRUE)
midist_eu <- get_dist(fotocasaServicios, stand = FALSE, method = "euclidean")
fviz_dist(midist_eu, show_labels = TRUE, lab_size = 0.3,
gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
midist_manhattan <- get_dist(fotocasaServicios, stand = FALSE, method = "manhattan")
fviz_dist(midist_manhattan, show_labels = TRUE, lab_size = 0.3,
gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
help(get_dist)
help(get_dist)
midist_max <- get_dist(fotocasaServicios, stand = FALSE, method = "maximum")
fviz_dist(midist_max, show_labels = TRUE, lab_size = 0.3,
gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
midist_canberra <- get_dist(fotocasaServicios, stand = FALSE, method = "canberra")
fviz_dist(midist_canberra, show_labels = TRUE, lab_size = 0.3,
gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
library(grid)
library(gridExtra)
help("fviz_nbclust")
p1 = fviz_nbclust(x = fotocasaServicios, FUNcluster = hcut, diss=midist_eu,
hc_method = "ward.D2", k.max = 10, verbose = FALSE,
hc_metric = "euclidean") + labs(title = "Num. optimo clusters")
p2 = fviz_nbclust(x = fotocasaServicios, FUNcluster = hcut, method = "wss",
hc_method = "ward.D2", k.max = 10, verbose = FALSE,diss=midist_eu,
hc_metric = "euclidean") + labs(title = "Num. optimo clusters")
grid.arrange(p1, p2, nrow = 1)
p1 = fviz_nbclust(x = fotocasaServicios, FUNcluster = pam, method = "silhouette",
k.max = 10, verbose = FALSE) +
labs(title = "Numero optimo de clusters")
p2 = fviz_nbclust(x = fotocasaServicios, FUNcluster = pam, method = "wss",
k.max = 10, verbose = FALSE) +
labs(title = "Numero optimo de clusters")
grid.arrange(p1, p2, nrow = 1)
p1 = fviz_nbclust(x = fotocasaServicios, FUNcluster = kmeans, method = "silhouette",
k.max = 10, verbose = FALSE) +
labs(title = "Numero optimo de clusters")
p2 = fviz_nbclust(x = fotocasaServicios, FUNcluster = kmeans, method = "wss",
k.max = 10, verbose = FALSE) +
labs(title = "Numero optimo de clusters")
grid.arrange(p1, p2, nrow = 1)
clustWARD <- hclust(midist_eu, method="ward.D2")
gruposWARD <- cutree(clustWARD, k=6)
table(gruposWARD)
clustPAM <- pam(midist_eu, k =8, diss=TRUE)
table(clustPAM$clustering)
set.seed(100)
clustMEANS <- kmeans(fotocasaServicios, centers = 7, nstart = 20)
table(clustMEANS$cluster)
library(ggsci)
colores = pal_npg("nrc")(6)
colores2 = pal_npg("nrc")(8)
colores3=pal_npg("nrc")(7)
par(mfrow = c(1,3))
plot(silhouette(gruposWARD, midist_eu), col=colores, border=NA, main = "WARD")
plot(silhouette(clustPAM$clustering, midist_eu), col=colores2, border=NA, main = "K-MEDIOIDES")
plot(silhouette(clustMEANS$cluster, midist_eu), col=colores3, border=NA, main = "K-MEDIAS")
